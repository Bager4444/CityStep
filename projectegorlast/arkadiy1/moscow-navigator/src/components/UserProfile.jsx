import { useState } from 'react'
import { useAuth } from '../contexts/AuthContext'
import './UserProfile.css'

const UserProfile = ({ onClose }) => {
  const { user, logout, updateUser, removeFromFavorites, loading } = useAuth()
  const [activeTab, setActiveTab] = useState('profile') // 'profile', 'favorites'
  const [isEditing, setIsEditing] = useState(false)
  const [editData, setEditData] = useState({
    firstName: user?.firstName || '',
    lastName: user?.lastName || ''
  })

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ñ–æ—Ä–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleEditChange = (e) => {
    const { name, value } = e.target
    setEditData(prev => ({
      ...prev,
      [name]: value
    }))
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø—Ä–æ—Ñ–∏–ª—è
  const handleSaveProfile = async () => {
    try {
      if (!editData.firstName.trim() || !editData.lastName.trim()) {
        alert('–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã')
        return
      }

      await updateUser({
        firstName: editData.firstName.trim(),
        lastName: editData.lastName.trim()
      })

      setIsEditing(false)
      console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω')
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:', error.message)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è: ' + error.message)
    }
  }

  // –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleCancelEdit = () => {
    setEditData({
      firstName: user?.firstName || '',
      lastName: user?.lastName || ''
    })
    setIsEditing(false)
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ –º–µ—Å—Ç–∞ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  const handleRemoveFavorite = async (place) => {
    try {
      await removeFromFavorites(place)
      console.log('‚úÖ –ú–µ—Å—Ç–æ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ')
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', error.message)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: ' + error.message)
    }
  }

  // –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
  const handleLogout = () => {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã?')) {
      logout()
      onClose()
    }
  }

  if (!user) {
    return null
  }

  return (
    <div className="user-profile">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="profile-header">
        <div className="profile-avatar">
          {user.firstName[0]}{user.lastName[0]}
        </div>
        <div className="profile-info">
          <h2>{user.firstName} {user.lastName}</h2>
          <p>{user.email}</p>
          <small>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {new Date(user.createdAt).toLocaleDateString('ru-RU')}</small>
        </div>
        <button className="profile-close" onClick={onClose}>‚úï</button>
      </div>

      {/* –í–∫–ª–∞–¥–∫–∏ */}
      <div className="profile-tabs">
        <button
          className={`tab ${activeTab === 'profile' ? 'active' : ''}`}
          onClick={() => setActiveTab('profile')}
        >
          üë§ –ü—Ä–æ—Ñ–∏–ª—å
        </button>
        <button
          className={`tab ${activeTab === 'favorites' ? 'active' : ''}`}
          onClick={() => setActiveTab('favorites')}
        >
          ‚≠ê –ò–∑–±—Ä–∞–Ω–Ω–æ–µ ({user.favorites?.length || 0})
        </button>
      </div>

      {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–æ–∫ */}
      <div className="profile-content">
        {activeTab === 'profile' && (
          <div className="profile-tab">
            <h3>–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h3>
            
            {!isEditing ? (
              <div className="profile-view">
                <div className="profile-field">
                  <label>–ò–º—è:</label>
                  <span>{user.firstName}</span>
                </div>
                <div className="profile-field">
                  <label>–§–∞–º–∏–ª–∏—è:</label>
                  <span>{user.lastName}</span>
                </div>
                <div className="profile-field">
                  <label>Email:</label>
                  <span>{user.email}</span>
                </div>
                
                <div className="profile-actions">
                  <button
                    className="btn-secondary"
                    onClick={() => setIsEditing(true)}
                  >
                    ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                  </button>
                </div>
              </div>
            ) : (
              <div className="profile-edit">
                <div className="form-group">
                  <label htmlFor="firstName">–ò–º—è:</label>
                  <input
                    type="text"
                    id="firstName"
                    name="firstName"
                    value={editData.firstName}
                    onChange={handleEditChange}
                    disabled={loading}
                  />
                </div>
                
                <div className="form-group">
                  <label htmlFor="lastName">–§–∞–º–∏–ª–∏—è:</label>
                  <input
                    type="text"
                    id="lastName"
                    name="lastName"
                    value={editData.lastName}
                    onChange={handleEditChange}
                    disabled={loading}
                  />
                </div>
                
                <div className="profile-actions">
                  <button
                    className="btn-primary"
                    onClick={handleSaveProfile}
                    disabled={loading}
                  >
                    {loading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å'}
                  </button>
                  <button
                    className="btn-secondary"
                    onClick={handleCancelEdit}
                    disabled={loading}
                  >
                    ‚ùå –û—Ç–º–µ–Ω–∞
                  </button>
                </div>
              </div>
            )}

            {/* –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ */}
            <div className="profile-logout">
              <button
                className="btn-danger"
                onClick={handleLogout}
              >
                üö™ –í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
              </button>
            </div>
          </div>
        )}

        {activeTab === 'favorites' && (
          <div className="favorites-tab">
            <h3>–ò–∑–±—Ä–∞–Ω–Ω—ã–µ –º–µ—Å—Ç–∞</h3>
            
            {!user.favorites || user.favorites.length === 0 ? (
              <div className="empty-favorites">
                <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –º–µ—Å—Ç</p>
                <small>–î–æ–±–∞–≤–ª—è–π—Ç–µ –º–µ—Å—Ç–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ</small>
              </div>
            ) : (
              <div className="favorites-list">
                {user.favorites.map((place, index) => (
                  <div key={index} className="favorite-item">
                    <div className="favorite-info">
                      <h4>{place.display_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–µ—Å—Ç–æ'}</h4>
                      <p>üìç {place.lat.toFixed(6)}, {place.lon.toFixed(6)}</p>
                      <small>
                        –î–æ–±–∞–≤–ª–µ–Ω–æ: {new Date(place.addedAt).toLocaleDateString('ru-RU')}
                      </small>
                    </div>
                    <button
                      className="remove-favorite"
                      onClick={() => handleRemoveFavorite(place)}
                      title="–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"
                    >
                      üóëÔ∏è
                    </button>
                  </div>
                ))}
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  )
}

export default UserProfile
