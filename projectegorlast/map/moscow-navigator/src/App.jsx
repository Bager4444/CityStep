import { useState, useEffect } from 'react'
import { useAuth } from './contexts/AuthContext'
import MapComponent from './components/MapComponent'
import SearchPanel from './components/SearchPanel'
import RoutePanel from './components/RoutePanel'

import LocationDebug from './components/LocationDebug'
import UserButton from './components/UserButton'
import WelcomeScreen from './components/WelcomeScreen'
import geolocationService from './services/GeolocationService'
import './App.css'

function App() {
  const { isAuthenticated, loading } = useAuth()
  const [searchQuery, setSearchQuery] = useState('')
  const [routeFrom, setRouteFrom] = useState('')
  const [routeTo, setRouteTo] = useState('')
  const [mapCenter, setMapCenter] = useState([55.7558, 37.6176]) // –ú–æ—Å–∫–≤–∞
  const [markers, setMarkers] = useState([])
  const [route, setRoute] = useState(null)
  const [userLocation, setUserLocation] = useState(null)
  const [isAuthModalOpen, setIsAuthModalOpen] = useState(false)
  const [isFullscreenMap, setIsFullscreenMap] = useState(false)

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—ã—Å–æ–∫–æ—Ç–æ—á–Ω–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    const initializeGeolocation = async () => {
      if (!geolocationService.isSupported()) {
        console.warn('üö´ –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —ç—Ç–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º')
        return
      }

      try {
        // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
        console.log('üìç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é...')
        await geolocationService.requestPermission()
        console.log('‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –ø–æ–ª—É—á–µ–Ω–æ')

        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é
        console.log('üéØ –ü–æ–ª—É—á–∞–µ–º –≤—ã—Å–æ–∫–æ—Ç–æ—á–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ...')
        const position = await geolocationService.getCurrentPosition(true)
        setUserLocation(position.coordinates)

        console.log('üéØ –í—ã—Å–æ–∫–æ—Ç–æ—á–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ:', {
          coordinates: position.coordinates,
          accuracy: `${position.accuracy}–º (${position.accuracyText})`,
          speed: position.speedKmh ? `${position.speedKmh} –∫–º/—á` : '–Ω–µ–ø–æ–¥–≤–∏–∂–µ–Ω',
          heading: position.headingText || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
          timestamp: new Date(position.timestamp).toLocaleTimeString()
        })

        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ú–æ—Å–∫–≤–µ –∏–ª–∏ —Ä—è–¥–æ–º, —Ü–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É –Ω–∞ –µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏
        const [lat, lon] = position.coordinates
        if (lat > 55.4 && lat < 56.1 && lon > 37.2 && lon < 38.0) {
          setMapCenter(position.coordinates)
          console.log('üó∫Ô∏è –ö–∞—Ä—Ç–∞ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        }

        // –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        console.log('üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è...')
        geolocationService.startWatching(
          (updatedPosition) => {
            setUserLocation(updatedPosition.coordinates)

            // –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ—á–Ω–æ—Å—Ç–∏
            const prevAccuracy = geolocationService.getLastKnownPosition()?.accuracy
            if (!prevAccuracy || Math.abs(updatedPosition.accuracy - prevAccuracy) > 5) {
              console.log('üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ:', {
                coordinates: updatedPosition.coordinates,
                accuracy: `${updatedPosition.accuracy}–º (${updatedPosition.accuracyText})`,
                improvement: prevAccuracy ?
                  `${prevAccuracy > updatedPosition.accuracy ? 'üìà –ª—É—á—à–µ' : 'üìâ —Ö—É–∂–µ'} –Ω–∞ ${Math.abs(prevAccuracy - updatedPosition.accuracy).toFixed(1)}–º` :
                  '–ø–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ'
              })
            }
          },
          (error) => {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è:', error.message)
          },
          true // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å
        )

      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏:', error.message)

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–¥—Å–∫–∞–∑–∫–∏
        if (error.message.includes('–∑–∞–ø—Ä–µ—â–µ–Ω')) {
          console.log('üí° –°–æ–≤–µ—Ç: –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –ª—É—á—à–µ–π —Ä–∞–±–æ—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏')
        } else if (error.message.includes('–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ')) {
          console.log('üí° –°–æ–≤–µ—Ç: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –≤–∫–ª—é—á–∏—Ç–µ —Å–ª—É–∂–±—ã –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏')
        }
      }
    }

    initializeGeolocation()

    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    return () => {
      if (geolocationService.isCurrentlyWatching()) {
        console.log('üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏')
        geolocationService.stopWatching()
      }
    }
  }, [])

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ - –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω
  const handleNavigationUpdate = (data) => {
    console.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', data)

    // –ï—Å–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞, –º–æ–∂–µ–º –æ–±–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—Ç—Ä –∫–∞—Ä—Ç—ã
    if (data.isNavigating && userLocation) {
      setMapCenter(userLocation)
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —à–∞–≥–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ - –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω
  const handleNavigationStepsUpdate = (steps) => {
    console.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —à–∞–≥–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', steps)
  }

  const handleSearch = async (query) => {
    if (!query.trim()) {
      throw new Error('–ü—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞')
    }

    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º Nominatim API –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞–¥—Ä–µ—Å–æ–≤ –≤ –ú–æ—Å–∫–≤–µ
      const response = await fetch(
        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query + ', –ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è')}&limit=5&addressdetails=1`
      )

      if (!response.ok) {
        throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ')
      }

      const data = await response.json()

      if (!data || data.length === 0) {
        throw new Error(`–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞: "${query}"`)
      }

      const results = data.map(item => {
        const lat = parseFloat(item.lat)
        const lon = parseFloat(item.lon)

        if (isNaN(lat) || isNaN(lon)) {
          console.warn('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞:', item)
          return null
        }

        return {
          lat,
          lon,
          display_name: item.display_name,
          address: item.address
        }
      }).filter(Boolean) // –£–±–∏—Ä–∞–µ–º null —ç–ª–µ–º–µ–Ω—Ç—ã

      if (results.length === 0) {
        throw new Error('–ü–æ–ª—É—á–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–∏—Å–∫–∞')
      }

      setMarkers(results)
      setMapCenter([results[0].lat, results[0].lon])

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', error)
      throw error // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
    }
  }

  const handleRouteSearch = async (transportMode = 'walking', totalTime = null) => {
    // –î–µ—Ç–∞–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª–µ–π
    if (!routeFrom.trim()) {
      throw new Error('–ü–æ–ª–µ "–û—Ç–∫—É–¥–∞" –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ')
    }

    if (!routeTo.trim()) {
      throw new Error('–ü–æ–ª–µ "–ö—É–¥–∞" –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ')
    }

    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞:', {
      from: routeFrom.trim(),
      to: routeTo.trim(),
      transport: transportMode,
      totalTime: totalTime
    })

    try {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–ª—É—á–∞—è "–ú–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ"
      let fromQuery = routeFrom.trim()
      let fromCoords = null

      if (fromQuery === '–ú–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ' && userLocation) {
        fromCoords = userLocation
      } else {
        // –ì–µ–æ–∫–æ–¥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Ç–æ—á–∫—É
        console.log('üîç –ò—â–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Ç–æ—á–∫—É:', fromQuery)
        const fromResponse = await fetch(
          `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(fromQuery + ', –ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è')}&limit=1&addressdetails=1`
        )

        if (!fromResponse.ok) {
          console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –Ω–∞—á–∞–ª—å–Ω–æ–π —Ç–æ—á–∫–∏:', fromResponse.status)
          throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –Ω–∞—á–∞–ª—å–Ω–æ–π —Ç–æ—á–∫–∏')
        }

        const fromData = await fromResponse.json()
        console.log('üìç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π —Ç–æ—á–∫–∏:', fromData)

        if (!fromData || fromData.length === 0) {
          throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞–¥—Ä–µ—Å: "${fromQuery}"`)
        }

        fromCoords = [parseFloat(fromData[0].lat), parseFloat(fromData[0].lon)]
        console.log('üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–∞—á–∞–ª—å–Ω–æ–π —Ç–æ—á–∫–∏:', fromCoords)

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
        if (isNaN(fromCoords[0]) || isNaN(fromCoords[1])) {
          throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–∞—á–∞–ª—å–Ω–æ–π —Ç–æ—á–∫–∏')
        }
      }

      // –ì–µ–æ–∫–æ–¥–∏—Ä—É–µ–º –∫–æ–Ω–µ—á–Ω—É—é —Ç–æ—á–∫—É
      console.log('üîç –ò—â–µ–º –∫–æ–Ω–µ—á–Ω—É—é —Ç–æ—á–∫—É:', routeTo.trim())
      const toResponse = await fetch(
        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(routeTo.trim() + ', –ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è')}&limit=1&addressdetails=1`
      )

      if (!toResponse.ok) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–æ–Ω–µ—á–Ω–æ–π —Ç–æ—á–∫–∏:', toResponse.status)
        throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–æ–Ω–µ—á–Ω–æ–π —Ç–æ—á–∫–∏')
      }

      const toData = await toResponse.json()
      console.log('üìç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –∫–æ–Ω–µ—á–Ω–æ–π —Ç–æ—á–∫–∏:', toData)

      if (!toData || toData.length === 0) {
        throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞–¥—Ä–µ—Å: "${routeTo.trim()}"`)
      }

      const toCoords = [parseFloat(toData[0].lat), parseFloat(toData[0].lon)]
      console.log('üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–æ–Ω–µ—á–Ω–æ–π —Ç–æ—á–∫–∏:', toCoords)

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
      if (isNaN(toCoords[0]) || isNaN(toCoords[1])) {
        throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–æ–Ω–µ—á–Ω–æ–π —Ç–æ—á–∫–∏')
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ—á–∫–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç
      const distance = Math.sqrt(
        Math.pow(fromCoords[0] - toCoords[0], 2) + Math.pow(fromCoords[1] - toCoords[1], 2)
      )
      if (distance < 0.001) {
        throw new Error('–ù–∞—á–∞–ª—å–Ω–∞—è –∏ –∫–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∏ —Å–ª–∏—à–∫–æ–º –±–ª–∏–∑–∫–æ –¥—Ä—É–≥ –∫ –¥—Ä—É–≥—É')
      }

      // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —Ç–æ—á–µ–∫ –¥–ª—è —É–¥–ª–∏–Ω–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞
      const createExtendedRoute = async (from, to, targetTimeMinutes) => {
        const targetDistanceKm = (targetTimeMinutes / 60) * 5 // 5 –∫–º/—á —Å—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å —Ö–æ–¥—å–±—ã

        // –°–Ω–∞—á–∞–ª–∞ —Å—Ç—Ä–æ–∏–º –ø—Ä—è–º–æ–π –º–∞—Ä—à—Ä—É—Ç
        const directRoute = await buildRoute(from, to, transportMode)
        const directDistanceKm = directRoute.distance / 1000

        console.log(`üéØ –¶–µ–ª–µ–≤–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ: ${targetDistanceKm.toFixed(1)} –∫–º, –ø—Ä—è–º–æ–π –º–∞—Ä—à—Ä—É—Ç: ${directDistanceKm.toFixed(1)} –∫–º`)

        // –ï—Å–ª–∏ –ø—Ä—è–º–æ–π –º–∞—Ä—à—Ä—É—Ç —É–∂–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª–∏–Ω–Ω—ã–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
        if (directDistanceKm >= targetDistanceKm * 0.9) {
          console.log('‚úÖ –ü—Ä—è–º–æ–π –º–∞—Ä—à—Ä—É—Ç –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ –¥–ª–∏–Ω–µ')
          return directRoute
        }

        // –ù—É–∂–Ω–æ —É–¥–ª–∏–Ω–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç –¥–æ —Ü–µ–ª–µ–≤–æ–≥–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è
        const additionalDistanceKm = targetDistanceKm - directDistanceKm
        console.log(`üìè –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å ${additionalDistanceKm.toFixed(1)} –∫–º –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è ${targetDistanceKm.toFixed(1)} –∫–º`)

        // –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–æ—á–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
        let bestRoute = directRoute
        let bestDifference = additionalDistanceKm

        // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π
        const offsetMultipliers = [0.15, 0.25, 0.35, 0.45] // —Ä–∞–∑–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è

        for (const multiplier of offsetMultipliers) {
          try {
            const waypoints = await generateWaypoints(from, to, additionalDistanceKm, directDistanceKm, multiplier)

            if (waypoints.length > 0) {
              console.log(`üó∫Ô∏è –ü–æ–ø—ã—Ç–∫–∞ ${multiplier}: —Å–æ–∑–¥–∞–µ–º –º–∞—Ä—à—Ä—É—Ç —á–µ—Ä–µ–∑ ${waypoints.length} –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —Ç–æ—á–µ–∫`)
              const testRoute = await buildRouteWithWaypoints([from, ...waypoints, to], transportMode)
              const testDistanceKm = testRoute.distance / 1000
              const testDifference = Math.abs(testDistanceKm - targetDistanceKm)

              console.log(`üìè –ü–æ–ø—ã—Ç–∫–∞ ${multiplier}: –ø–æ–ª—É—á–∏–ª–∏ ${testDistanceKm.toFixed(1)} –∫–º (–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ: ${testDifference.toFixed(1)} –∫–º)`)

              // –ï—Å–ª–∏ —ç—Ç–æ –ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
              if (testDifference < bestDifference) {
                bestRoute = testRoute
                bestDifference = testDifference
                console.log(`‚úÖ –ù–æ–≤—ã–π –ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ ${testDifference.toFixed(1)} –∫–º`)

                // –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–∏ —Ç–æ—á–Ω–æ—Å—Ç–∏ ¬±1 –∫–º, –ø—Ä–µ—Ä—ã–≤–∞–µ–º –ø–æ–∏—Å–∫
                if (testDifference <= 1.0) {
                  console.log('üéØ –î–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ —Ü–µ–ª–µ–≤–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å ¬±1 –∫–º')
                  break
                }
              }
            }
          } catch (error) {
            console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ ${multiplier}:`, error.message)
          }
        }

        if (bestRoute !== directRoute) {
          console.log(`üó∫Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª—É—á—à–∏–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç`)
          const extendedRoute = bestRoute

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏ –º—ã —Ü–µ–ª–µ–≤–æ–≥–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è
          const actualDistanceKm = extendedRoute.distance / 1000
          console.log(`üìè –ü–æ–ª—É—á–∏–ª–∏ –º–∞—Ä—à—Ä—É—Ç ${actualDistanceKm.toFixed(1)} –∫–º (—Ü–µ–ª—å: ${targetDistanceKm.toFixed(1)} –∫–º)`)

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–∞—Ä—à—Ä—É—Ç –Ω–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (–∑–∞—â–∏—Ç–∞ –æ—Ç –æ—à–∏–±–æ–∫)
          const maxReasonableDistance = targetDistanceKm * 2 // –º–∞–∫—Å–∏–º—É–º –≤ 2 —Ä–∞–∑–∞ –±–æ–ª—å—à–µ —Ü–µ–ª–∏
          if (actualDistanceKm > maxReasonableDistance) {
            console.log(`‚ö†Ô∏è –ú–∞—Ä—à—Ä—É—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (${actualDistanceKm.toFixed(1)} –∫–º), –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä—è–º–æ–π –º–∞—Ä—à—Ä—É—Ç`)
            return directRoute
          }

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ—Å—Ç—å –º–∞—Ä—à—Ä—É—Ç–∞ (–¥–æ–ø—É—Å–∫ ¬±1 –∫–º)
          const toleranceKm = 1.0 // –¥–æ–ø—É—Å–∫ ¬±1 –∫–º
          const difference = Math.abs(actualDistanceKm - targetDistanceKm)

          if (difference <= toleranceKm) {
            console.log(`‚úÖ –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ —Ç–æ—á–Ω–æ–µ: –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ ${difference.toFixed(1)} –∫–º`)
            return extendedRoute
          } else {
            console.log(`‚ö†Ô∏è –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –Ω–µ—Ç–æ—á–Ω–æ–µ: –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ ${difference.toFixed(1)} –∫–º (–¥–æ–ø—É—Å–∫: ¬±${toleranceKm} –∫–º)`)

            // –ï—Å–ª–∏ –º–∞—Ä—à—Ä—É—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä—è–º–æ–π
            if (difference > 5) { // –µ—Å–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –±–æ–ª—å—à–µ 5 –∫–º
              console.log('üìè –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä—è–º–æ–π –º–∞—Ä—à—Ä—É—Ç')
              return directRoute
            }

            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å (–ª—É—á—à–µ —á–µ–º –ø—Ä—è–º–æ–π –º–∞—Ä—à—Ä—É—Ç)
            return extendedRoute
          }
        }

        return directRoute
      }

      // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —Ç–æ—á–µ–∫
      const generateWaypoints = async (from, to, additionalDistanceKm, directDistanceKm, offsetMultiplier = 0.2) => {
        const waypoints = []

        // –ë–æ–ª–µ–µ –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —Ç–æ—á–µ–∫
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫ –∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
        const maxWaypoints = Math.min(3, Math.max(1, Math.floor(additionalDistanceKm / 5))) // –º–∞–∫—Å–∏–º—É–º 3 —Ç–æ—á–∫–∏
        console.log(`üó∫Ô∏è –°–æ–∑–¥–∞–µ–º ${maxWaypoints} –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —Ç–æ—á–µ–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è ${additionalDistanceKm.toFixed(1)} –∫–º`)

        // –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫ –ø—Ä—è–º–æ–π –ª–∏–Ω–∏–∏
        const directionLat = to[0] - from[0]
        const directionLon = to[1] - from[1]

        // –ü–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–Ω—ã–π –≤–µ–∫—Ç–æ—Ä (–ø–æ–≤–æ—Ä–æ—Ç –Ω–∞ 90 –≥—Ä–∞–¥—É—Å–æ–≤)
        const perpLat = -directionLon
        const perpLon = directionLat

        // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–Ω—ã–π –≤–µ–∫—Ç–æ—Ä
        const perpLength = Math.sqrt(perpLat * perpLat + perpLon * perpLon)

        if (perpLength > 0) {
          const normalizedPerpLat = perpLat / perpLength
          const normalizedPerpLon = perpLon / perpLength

          // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
          const maxOffsetKm = Math.min(8, additionalDistanceKm * offsetMultiplier) // –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π multiplier
          const offsetDistance = maxOffsetKm / 111 // –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫–º –≤ –≥—Ä–∞–¥—É—Å—ã

          console.log(`üìç –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ ${offsetMultiplier} = ${maxOffsetKm.toFixed(1)} –∫–º`)

          for (let i = 0; i < maxWaypoints; i++) {
            // –°–æ–∑–¥–∞–µ–º —Ç–æ—á–∫–∏ —Å —É–º–µ—Ä–µ–Ω–Ω—ã–º–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è–º–∏
            const factor = (i % 2 === 0) ? 1 : -1 // —á–µ—Ä–µ–¥—É–µ–º —Å—Ç–æ—Ä–æ–Ω—ã
            const scaleFactor = 0.5 + (i * 0.25) // –±–æ–ª–µ–µ —É–º–µ—Ä–µ–Ω–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è

            // –ü–æ–∑–∏—Ü–∏—è –≤–¥–æ–ª—å –ø—Ä—è–º–æ–π –ª–∏–Ω–∏–∏ (—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–æ—á–∫–∏)
            const t = (i + 1) / (maxWaypoints + 1)
            const baseLat = from[0] + t * (to[0] - from[0])
            const baseLon = from[1] + t * (to[1] - from[1])

            // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ
            const waypointLat = baseLat + normalizedPerpLat * offsetDistance * factor * scaleFactor
            const waypointLon = baseLon + normalizedPerpLon * offsetDistance * factor * scaleFactor

            waypoints.push([waypointLat, waypointLon])

            console.log(`üìç –¢–æ—á–∫–∞ ${i + 1}: –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ ${(maxOffsetKm * scaleFactor).toFixed(1)} –∫–º ${factor > 0 ? '–≤–ø—Ä–∞–≤–æ' : '–≤–ª–µ–≤–æ'}`)
          }
        }

        return waypoints
      }

      // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞
      const buildRoute = async (from, to, mode) => {
        const profile = getOSRMProfile(mode)
        const response = await fetch(
          `https://router.project-osrm.org/route/v1/${profile}/${from[1]},${from[0]};${to[1]},${to[0]}?overview=full&geometries=geojson&steps=true`
        )

        if (!response.ok) {
          throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤')
        }

        const data = await response.json()
        if (!data.routes || data.routes.length === 0) {
          throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç')
        }

        return data.routes[0]
      }

      // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ç–æ—á–∫–∏
      const buildRouteWithWaypoints = async (points, mode) => {
        const profile = getOSRMProfile(mode)
        const coordinates = points.map(p => `${p[1]},${p[0]}`).join(';')

        const response = await fetch(
          `https://router.project-osrm.org/route/v1/${profile}/${coordinates}?overview=full&geometries=geojson&steps=true`
        )

        if (!response.ok) {
          throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤')
        }

        const data = await response.json()
        if (!data.routes || data.routes.length === 0) {
          throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ç–æ—á–∫–∏')
        }

        return data.routes[0]
      }

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –º–∞—Ä—à—Ä—É—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
      const getOSRMProfile = (mode) => {
        switch (mode) {
          case 'walking': return 'foot'
          case 'cycling': return 'bicycle'
          case 'driving':
          case 'taxi':
          case 'public_transport':
          default: return 'driving'
        }
      }

      const profile = getOSRMProfile(transportMode)
      console.log(`üöó –°—Ç—Ä–æ–∏–º –º–∞—Ä—à—Ä—É—Ç –¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞: ${transportMode} (–ø—Ä–æ—Ñ–∏–ª—å: ${profile})`)

      // –í—ã–±–∏—Ä–∞–µ–º —Å–ø–æ—Å–æ–± –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–ª–∏—á–∏—è totalTime
      let routeInfo
      if (totalTime && totalTime > 0) {
        console.log(`‚è±Ô∏è –°—Ç—Ä–æ–∏–º –º–∞—Ä—à—Ä—É—Ç –Ω–∞ ${totalTime} –º–∏–Ω—É—Ç`)
        routeInfo = await createExtendedRoute(fromCoords, toCoords, totalTime)
      } else {
        console.log('üó∫Ô∏è –°—Ç—Ä–æ–∏–º –ø—Ä—è–º–æ–π –º–∞—Ä—à—Ä—É—Ç')
        routeInfo = await buildRoute(fromCoords, toCoords, transportMode)
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–∞
      if (!routeInfo.geometry || !routeInfo.geometry.coordinates ||
          typeof routeInfo.distance !== 'number' || typeof routeInfo.duration !== 'number') {
        throw new Error('–ü–æ–ª—É—á–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç–∞')
      }

      setRoute({
        coordinates: routeInfo.geometry.coordinates.map(coord => [coord[1], coord[0]]),
        distance: routeInfo.distance,
        duration: routeInfo.duration,
        from: fromCoords,
        to: toCoords
      })

      // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É –Ω–∞ –º–∞—Ä—à—Ä—É—Ç–µ
      const bounds = [
        [Math.min(fromCoords[0], toCoords[0]), Math.min(fromCoords[1], toCoords[1])],
        [Math.max(fromCoords[0], toCoords[0]), Math.max(fromCoords[1], toCoords[1])]
      ]
      setMapCenter([(bounds[0][0] + bounds[1][0]) / 2, (bounds[0][1] + bounds[1][1]) / 2])

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞:', error)
      throw error // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  const handleAuthModalChange = (isOpen) => {
    setIsAuthModalOpen(isOpen)
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç—ã
  const handleStartJourney = () => {
    console.log('Starting journey with route:', route)
    if (route) {
      setIsFullscreenMap(true)
    } else {
      console.error('No route available for fullscreen map')
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç—ã
  const handleCloseFullscreenMap = () => {
    setIsFullscreenMap(false)
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤–æ –≤—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  if (loading) {
    return (
      <div className="app-loading">
        <div className="loading-spinner">
          <div className="spinner"></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ CityStep...</p>
        </div>
      </div>
    )
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  if (!isAuthenticated) {
    return <WelcomeScreen />
  }

  // –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–∞—è –∫–∞—Ä—Ç–∞
  if (isFullscreenMap && route) {
    try {
      const mapCenterForFullscreen = route?.from || mapCenter || [55.7558, 37.6176]

      return (
        <div className="fullscreen-map">
          <div className="fullscreen-header">
            <button
              onClick={handleCloseFullscreenMap}
              className="close-fullscreen-btn"
              title="–ó–∞–∫—Ä—ã—Ç—å –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º"
            >
              ‚úï –ó–∞–∫—Ä—ã—Ç—å
            </button>
            <h2>üó∫Ô∏è –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –º–∞—Ä—à—Ä—É—Ç—É</h2>
            <div className="scale-info">–ú–∞—Å—à—Ç–∞–± 1:100</div>
          </div>
          <div className="fullscreen-map-component">
            <MapComponent
              center={mapCenterForFullscreen}
              markers={markers || []}
              route={route}
              userLocation={userLocation}
              zoom={18}
              className="fullscreen-map-component"
            />
          </div>
        </div>
      )
    } catch (error) {
      console.error('Error rendering fullscreen map:', error)
      return (
        <div className="fullscreen-map">
          <div className="fullscreen-header">
            <button onClick={handleCloseFullscreenMap}>‚úï –ó–∞–∫—Ä—ã—Ç—å</button>
            <h2>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã</h2>
          </div>
          <div style={{ padding: '20px', color: 'red' }}>
            –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ä—Ç—ã: {error.message}
          </div>
        </div>
      )
    }
  }

  // –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  return (
    <div className="app">
      <div className="sidebar">
        <div className="sidebar-header">
          <h1>CityStep</h1>
          <UserButton onAuthModalChange={handleAuthModalChange} />
        </div>

        <SearchPanel
          searchQuery={searchQuery}
          setSearchQuery={setSearchQuery}
          onSearch={handleSearch}
          markers={markers}
          setMapCenter={setMapCenter}
        />

        <RoutePanel
          routeFrom={routeFrom}
          setRouteFrom={setRouteFrom}
          routeTo={routeTo}
          setRouteTo={setRouteTo}
          onRouteSearch={handleRouteSearch}
          route={route}
          userLocation={userLocation}
        />


      </div>

      {/* –ö–∞—Ä—Ç–∞ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É - —á–µ—Ç–≤–µ—Ä—Ç—å —ç–∫—Ä–∞–Ω–∞ */}
      <div className={`map-container ${isAuthModalOpen ? 'map-hidden' : ''}`}>
        {!isAuthModalOpen && (
          <MapComponent
            center={mapCenter}
            markers={markers}
            route={route}
            userLocation={userLocation}
          />
        )}
        {isAuthModalOpen && (
          <div className="map-placeholder">
            <div className="map-placeholder-content">
              <h2>üó∫Ô∏è CityStep</h2>
              <p>–ö–∞—Ä—Ç–∞</p>
            </div>
          </div>
        )}
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å —Å–ø—Ä–∞–≤–∞ —Å–Ω–∏–∑—É */}
      <div className="additional-panel">
        <h3>üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Ä—à—Ä—É—Ç–µ</h3>
        {route ? (
          <div className="route-details">
            <div className="route-stat">
              <span className="stat-label">–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ:</span>
              <span className="stat-value">{route.distance || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</span>
            </div>
            <div className="route-stat">
              <span className="stat-label">–í—Ä–µ–º—è:</span>
              <span className="stat-value">{route.duration || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</span>
            </div>
            <div className="route-stat">
              <span className="stat-label">–¢–∏–ø:</span>
              <span className="stat-value">üö∂‚Äç‚ôÇÔ∏è –ü–µ—à–∫–æ–º</span>
            </div>
            <button
              onClick={handleStartJourney}
              className="journey-button"
              title="–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—É –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω —Å –º–∞—Å—à—Ç–∞–±–æ–º 1:100"
            >
              üó∫Ô∏è –í –ø—É—Ç—å
            </button>
          </div>
        ) : (
          <div className="no-route">
            <p>–ü–æ—Å—Ç—Ä–æ–π—Ç–µ –º–∞—Ä—à—Ä—É—Ç, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–µ—Ç–∞–ª–∏</p>
            <div className="route-tips">
              <h4>üí° –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</h4>
              <ul>
                <li>üö∂‚Äç‚ôÇÔ∏è –¢–æ–ª—å–∫–æ –ø–µ—à–µ—Ö–æ–¥–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã</li>
                <li>‚è∞ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è</li>
                <li>üõë –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–æ–∫</li>
                <li>‚òï –ü–æ–∏—Å–∫ –∫–∞—Ñ–µ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤</li>
              </ul>
            </div>
          </div>
        )}
      </div>

      {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—Ç–ª–∞–¥–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ */}
      <LocationDebug userLocation={userLocation} />
    </div>
  )
}

export default App
