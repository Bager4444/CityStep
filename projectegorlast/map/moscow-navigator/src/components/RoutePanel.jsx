import { useState, useCallback } from 'react'
import './RoutePanel.css'

function RoutePanel({
  routeFrom,
  setRouteFrom,
  routeTo,
  setRouteTo,
  onRouteSearch,
  route,
  userLocation
}) {
  const [isSearching, setIsSearching] = useState(false)
  const [error, setError] = useState('')
  const [totalTime, setTotalTime] = useState('')

  // –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—à–µ—Ö–æ–¥–Ω—ã–π —Ä–µ–∂–∏–º
  const selectedTransport = 'walking'

  const handleSubmit = async (e) => {
    e.preventDefault()
    if (!routeFrom.trim() || !routeTo.trim()) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±–∞ –ø–æ–ª—è')
      return
    }

    setIsSearching(true)
    setError('')

    try {
      // –ü–µ—Ä–µ–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ –∏ –∂–µ–ª–∞–µ–º–æ–µ –≤—Ä–µ–º—è
      await onRouteSearch(selectedTransport, totalTime)
    } catch (err) {
      // –ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
      let errorMessage = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –º–∞—Ä—à—Ä—É—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'

      if (err.message) {
        if (err.message.includes('–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ø–æ–ª—è')) {
          errorMessage = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª—è "–û—Ç–∫—É–¥–∞" –∏ "–ö—É–¥–∞"'
        } else if (err.message.includes('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞–¥—Ä–µ—Å')) {
          errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –æ–¥–∏–Ω –∏–∑ –∞–¥—Ä–µ—Å–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è.'
        } else if (err.message.includes('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏')) {
          errorMessage = '–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.'
        } else if (err.message.includes('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç')) {
          errorMessage = '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç –º–µ–∂–¥—É —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ —Ç–æ—á–∫–∞–º–∏.'
        } else {
          errorMessage = err.message
        }
      }

      setError(errorMessage)
      console.error('Route search error:', err)
    } finally {
      setIsSearching(false)
    }
  }

  const handleUseCurrentLocation = useCallback(() => {
    if (userLocation) {
      setRouteFrom('–ú–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
      setError('')
    } else {
      setError('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é –≤ –±—Ä–∞—É–∑–µ—Ä–µ.')
    }
  }, [userLocation, setRouteFrom])

  const handleSwapAddresses = useCallback(() => {
    const temp = routeFrom
    setRouteFrom(routeTo)
    setRouteTo(temp)
    setError('')
  }, [routeFrom, routeTo, setRouteFrom, setRouteTo])

  const handleFromChange = useCallback((e) => {
    setRouteFrom(e.target.value)
    setError('')
  }, [setRouteFrom])

  const handleToChange = useCallback((e) => {
    setRouteTo(e.target.value)
    setError('')
  }, [setRouteTo])

  const handleTotalTimeChange = useCallback((e) => {
    const newValue = e.target.value
    console.log('üïê –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏:', newValue, '—Ç–∏–ø:', typeof newValue)
    setTotalTime(newValue)
    setError('')
  }, [setTotalTime])



  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –Ω—É–∂–Ω–æ–≥–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏
  const calculateRequiredDistance = (timeMinutes) => {
    if (!timeMinutes || timeMinutes <= 0) return null
    const hours = timeMinutes / 60
    const distanceKm = hours * 5 // 5 –∫–º/—á - —Å—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å —Ö–æ–¥—å–±—ã
    return distanceKm
  }







  return (
    <div className="route-panel">
      <h3>üö∂‚Äç‚ôÇÔ∏è –ü–µ—à–µ—Ö–æ–¥–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç</h3>

      <form onSubmit={handleSubmit} className="route-form">
        <div className="route-inputs">
          <div className="input-group">
            <label htmlFor="route-from">–û—Ç–∫—É–¥–∞:</label>
            <div className="input-with-button">
              <input
                id="route-from"
                type="text"
                value={routeFrom}
                onChange={handleFromChange}
                placeholder="–ù–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞"
                className="route-input"
                disabled={isSearching}
                autoComplete="off"
              />
              {userLocation && (
                <button
                  type="button"
                  onClick={handleUseCurrentLocation}
                  className="location-button"
                  title="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ"
                >
                  üìç
                </button>
              )}
            </div>
          </div>

          <div className="swap-container">
            <button
              type="button"
              onClick={handleSwapAddresses}
              className="swap-button"
              title="–ü–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏"
            >
              ‚áÖ
            </button>
          </div>

          <div className="input-group">
            <label htmlFor="route-to">–ö—É–¥–∞:</label>
            <input
              id="route-to"
              type="text"
              value={routeTo}
              onChange={handleToChange}
              placeholder="–ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞"
              className="route-input"
              disabled={isSearching}
              autoComplete="off"
            />
          </div>

          <div className="input-group">
            <label htmlFor="total-time">‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è (–º–∏–Ω—É—Ç—ã):</label>
            <input
              id="total-time"
              type="number"
              value={totalTime}
              onChange={handleTotalTimeChange}
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 30"
              className="route-input"
              disabled={isSearching}
              min="1"
              max="1440"
              autoComplete="off"
            />
            {totalTime && totalTime > 0 && (
              <div className="time-hint">
                üí° –ú–∞—Ä—à—Ä—É—Ç –±—É–¥–µ—Ç —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω –¥–æ ~{calculateRequiredDistance(totalTime)?.toFixed(1)} –∫–º
                <div style={{ color: '#007bff', fontSize: '12px', marginTop: '4px' }}>
                  üéØ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Å—Ç –º–∞—Ä—à—Ä—É—Ç –Ω—É–∂–Ω–æ–π –¥–ª–∏–Ω—ã –º–µ–∂–¥—É –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ —Ç–æ—á–∫–∞–º–∏
                </div>
              </div>
            )}
          </div>
        </div>

        <button
          type="submit"
          className="route-button"
          disabled={isSearching || !routeFrom.trim() || !routeTo.trim()}
        >
          {isSearching ? '–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞...' : '–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç'}
        </button>

        {error && (
          <div className="error-message">
            {error}
          </div>
        )}
      </form>



      <div className="route-tips">
        <h4>üö∂‚Äç‚ôÇÔ∏è –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–µ—à–µ—Ö–æ–¥–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã:</h4>
        <ul>
          <li>–ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å ‚Üí –ü–∞—Ä–∫ –ì–æ—Ä—å–∫–æ–≥–æ (3.5 –∫–º, ~40 –º–∏–Ω)</li>
          <li>–ê—Ä–±–∞—Ç ‚Üí –¢–≤–µ—Ä—Å–∫–∞—è (1.2 –∫–º, ~15 –º–∏–Ω)</li>
          <li>–ö—Ä–µ–º–ª—å ‚Üí –•—Ä–∞–º –•—Ä–∏—Å—Ç–∞ –°–ø–∞—Å–∏—Ç–µ–ª—è (1.8 –∫–º, ~20 –º–∏–Ω)</li>
          <li>–í–î–ù–• ‚Üí –ë–æ—Ç–∞–Ω–∏—á–µ—Å–∫–∏–π —Å–∞–¥ (2.1 –∫–º, ~25 –º–∏–Ω)</li>
        </ul>
      </div>
    </div>
  )
}

export default RoutePanel
