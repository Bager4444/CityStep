import { useState, useCallback } from 'react'
import './RoutePanel.css'

function RoutePanel({
  routeFrom,
  setRouteFrom,
  routeTo,
  setRouteTo,
  waypoints = [],
  onAddWaypoint,
  onRemoveWaypoint,
  onRouteSearch,
  route,
  userLocation
}) {
  const [isSearching, setIsSearching] = useState(false)
  const [error, setError] = useState('')
  const [totalTime, setTotalTime] = useState('')
  const [newWaypointInputs, setNewWaypointInputs] = useState({}) // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –Ω–æ–≤—ã—Ö —Ç–æ—á–µ–∫
  const [searchingWaypoints, setSearchingWaypoints] = useState({}) // –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–∏—Å–∫–∞

  // –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—à–µ—Ö–æ–¥–Ω—ã–π —Ä–µ–∂–∏–º
  const selectedTransport = 'walking'

  const handleSubmit = async (e) => {
    e.preventDefault()

    console.log('üî• *** –§–û–†–ú–ê –û–¢–ü–†–ê–í–õ–ï–ù–ê ***')
    console.log('üî• routeFrom:', routeFrom)
    console.log('üî• routeTo:', routeTo)
    console.log('üî• totalTime:', totalTime)

    try {
      if (!routeFrom.trim() || !routeTo.trim()) {
        console.log('‚ùå –ü–æ–ª—è –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã')
        setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±–∞ –ø–æ–ª—è')
        return
      }

      console.log('‚úÖ –ü–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã, –Ω–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫')
      setIsSearching(true)
      setError('')

      // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —Ç–æ—á–µ–∫
      if (waypoints && waypoints.length > 0) {
        for (let i = 0; i < waypoints.length; i++) {
          const waypoint = waypoints[i]
          if (!waypoint || !waypoint.coordinates || waypoint.coordinates.length !== 2) {
            setError(`–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–∞—è —Ç–æ—á–∫–∞ ${i + 1}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏ –¥–æ–±–∞–≤–∏—Ç—å –µ—ë –∑–∞–Ω–æ–≤–æ.`)
            return
          }
        }

        // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–µ –≤—Ä–µ–º–µ–Ω–∏ –∏ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —Ç–æ—á–µ–∫
        if (totalTime && totalTime > 0) {
          console.log('‚ö†Ô∏è –ü—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ç–æ—á–∫–∏ –±—É–¥—É—Ç –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω—ã')
        }
      }

      // –ü–µ—Ä–µ–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ –∏ –∂–µ–ª–∞–µ–º–æ–µ –≤—Ä–µ–º—è
      console.log('üöÄ RoutePanel –≤—ã–∑—ã–≤–∞–µ—Ç onRouteSearch —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', {
        selectedTransport,
        totalTime,
        totalTimeType: typeof totalTime,
        waypointsCount: waypoints.length,
        waypoints: waypoints
      })
      await onRouteSearch(selectedTransport, totalTime)
    } catch (err) {
      // –ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
      let errorMessage = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –º–∞—Ä—à—Ä—É—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'

      if (err && err.message) {
        if (err.message.includes('–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ø–æ–ª—è')) {
          errorMessage = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª—è "–û—Ç–∫—É–¥–∞" –∏ "–ö—É–¥–∞"'
        } else if (err.message.includes('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞–¥—Ä–µ—Å')) {
          errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –æ–¥–∏–Ω –∏–∑ –∞–¥—Ä–µ—Å–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è.'
        } else if (err.message.includes('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏')) {
          errorMessage = '–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.'
        } else if (err.message.includes('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç')) {
          errorMessage = '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç –º–µ–∂–¥—É —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ —Ç–æ—á–∫–∞–º–∏.'
        } else if (err.message.includes('–ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—É—é —Ç–æ—á–∫—É')) {
          errorMessage = '–û—à–∏–±–∫–∞ —Å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–º–∏ —Ç–æ—á–∫–∞–º–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏—Ö –∏ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–Ω–æ–≤–æ.'
        } else {
          errorMessage = err.message
        }
      }

      setError(errorMessage)
      console.error('Route search error:', err)
    } finally {
      setIsSearching(false)
    }
  }

  const handleUseCurrentLocation = useCallback(() => {
    setRouteFrom('–ú–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
    setError('')
    console.log('‚úÖ –ü–æ–ª–µ "–û—Ç–∫—É–¥–∞" –∑–∞–ø–æ–ª–Ω–µ–Ω–æ: –ú–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ')
  }, [setRouteFrom])

  const handleSwapAddresses = useCallback(() => {
    const temp = routeFrom
    setRouteFrom(routeTo)
    setRouteTo(temp)
    setError('')
  }, [routeFrom, routeTo, setRouteFrom, setRouteTo])

  const handleFromChange = useCallback((e) => {
    setRouteFrom(e.target.value)
    setError('')
  }, [setRouteFrom])

  const handleToChange = useCallback((e) => {
    setRouteTo(e.target.value)
    setError('')
  }, [setRouteTo])

  const handleTotalTimeChange = useCallback((e) => {
    const newValue = e.target.value
    console.log('üïê –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏:', newValue, '—Ç–∏–ø:', typeof newValue)
    setTotalTime(newValue)
    setError('')
  }, [setTotalTime])



  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –Ω—É–∂–Ω–æ–≥–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏
  const calculateRequiredDistance = (timeMinutes) => {
    if (!timeMinutes || timeMinutes <= 0) return 0
    const hours = parseFloat(timeMinutes) / 60
    const distanceKm = hours * 5 // 5 –∫–º/—á - —Å—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å —Ö–æ–¥—å–±—ã
    return distanceKm
  }

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–π —Ç–æ—á–∫–∏
  const handleAddWaypoint = () => {
    const newId = Date.now()
    setNewWaypointInputs(prev => ({
      ...prev,
      [newId]: ''
    }))
  }

  // –ü–æ–∏—Å–∫ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–π —Ç–æ—á–∫–∏
  const handleSearchAndAddWaypoint = async (waypointId, query) => {
    if (!query.trim()) return

    setSearchingWaypoints(prev => ({ ...prev, [waypointId]: true }))

    try {
      const response = await fetch(
        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query + ', –ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è')}&limit=1&addressdetails=1&bounded=1&viewbox=36.8,56.0,38.2,55.1&countrycodes=ru`
      )

      if (response.ok) {
        const results = await response.json()
        if (results.length > 0) {
          const result = results[0]
          const lat = parseFloat(result.lat)
          const lon = parseFloat(result.lon)

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ú–æ—Å–∫–≤—ã
          if (lat < 55.1 || lat > 56.0 || lon < 36.8 || lon > 38.2) {
            setError(`–ú–µ—Å—Ç–æ "${query}" –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–Ω–µ –ú–æ—Å–∫–≤—ã`)
            return
          }

          const waypoint = {
            id: waypointId,
            name: result.display_name,
            coordinates: [lat, lon],
            order: waypoints.length
          }

          onAddWaypoint(waypoint)

          // –£–±–∏—Ä–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
          setNewWaypointInputs(prev => {
            const newInputs = { ...prev }
            delete newInputs[waypointId]
            return newInputs
          })
        } else {
          setError('–ú–µ—Å—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å.')
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–π —Ç–æ—á–∫–∏:', error)
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –º–µ—Å—Ç–∞')
    } finally {
      setSearchingWaypoints(prev => ({ ...prev, [waypointId]: false }))
    }
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—è –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–π —Ç–æ—á–∫–∏
  const handleCancelWaypoint = (waypointId) => {
    setNewWaypointInputs(prev => {
      const newInputs = { ...prev }
      delete newInputs[waypointId]
      return newInputs
    })
  }

  // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–π —Ç–æ—á–∫–∏
  const handleWaypointInputChange = (waypointId, value) => {
    setNewWaypointInputs(prev => ({
      ...prev,
      [waypointId]: value
    }))
    setError('')
  }







  return (
    <div className="route-panel">
      <h3>üö∂‚Äç‚ôÇÔ∏è –ü–µ—à–µ—Ö–æ–¥–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç</h3>

      <form onSubmit={handleSubmit} className="route-form">
        <div className="route-inputs">
          <div className="input-group">
            <label htmlFor="route-from">–û—Ç–∫—É–¥–∞:</label>
            <div className="input-with-button">
              <input
                id="route-from"
                type="text"
                value={routeFrom}
                onChange={handleFromChange}
                placeholder="–ù–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞"
                className="route-input"
                disabled={isSearching}
                autoComplete="off"
              />
              <button
                type="button"
                onClick={handleUseCurrentLocation}
                className="location-button available"
                title="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ"
              >
                üìç
              </button>
            </div>
          </div>

          {/* –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ç–æ—á–∫–∏ */}
          {waypoints.map((waypoint, index) => (
            <div key={waypoint.id} className="waypoint-group">
              <div className="waypoint-header">
                <span className="waypoint-label">üìç –¢–æ—á–∫–∞ {index + 1}:</span>
                <button
                  type="button"
                  onClick={() => onRemoveWaypoint(waypoint.id)}
                  className="remove-waypoint-btn"
                  title="–£–¥–∞–ª–∏—Ç—å —Ç–æ—á–∫—É"
                >
                  ‚úï
                </button>
              </div>
              <div className="waypoint-info">
                <span className="waypoint-name">{waypoint.name}</span>
              </div>
            </div>
          ))}

          {/* –ü–æ–ª—è –≤–≤–æ–¥–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —Ç–æ—á–µ–∫ */}
          {Object.entries(newWaypointInputs).map(([waypointId, value]) => (
            <div key={waypointId} className="new-waypoint-group">
              <label>üìç –ù–æ–≤–∞—è —Ç–æ—á–∫–∞:</label>
              <div className="new-waypoint-input">
                <input
                  type="text"
                  value={value}
                  onChange={(e) => handleWaypointInputChange(waypointId, e.target.value)}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞"
                  className="route-input"
                  disabled={searchingWaypoints[waypointId]}
                  onKeyPress={(e) => {
                    if (e.key === 'Enter') {
                      e.preventDefault()
                      handleSearchAndAddWaypoint(waypointId, value)
                    }
                  }}
                  autoComplete="off"
                />
                <div className="waypoint-actions">
                  <button
                    type="button"
                    onClick={() => handleSearchAndAddWaypoint(waypointId, value)}
                    className="add-waypoint-btn"
                    disabled={!value.trim() || searchingWaypoints[waypointId]}
                    title="–î–æ–±–∞–≤–∏—Ç—å —Ç–æ—á–∫—É"
                  >
                    {searchingWaypoints[waypointId] ? '‚è≥' : '‚úì'}
                  </button>
                  <button
                    type="button"
                    onClick={() => handleCancelWaypoint(waypointId)}
                    className="cancel-waypoint-btn"
                    title="–û—Ç–º–µ–Ω–∏—Ç—å"
                  >
                    ‚úï
                  </button>
                </div>
              </div>
            </div>
          ))}

          {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–π —Ç–æ—á–∫–∏ */}
          <div className="add-waypoint-container">
            <button
              type="button"
              onClick={handleAddWaypoint}
              className="add-waypoint-main-btn"
              title="–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—É—é —Ç–æ—á–∫—É"
            >
              ‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ—á–∫—É
            </button>
          </div>

          <div className="swap-container">
            <button
              type="button"
              onClick={handleSwapAddresses}
              className="swap-button"
              title="–ü–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏"
            >
              ‚áÖ
            </button>
          </div>

          <div className="input-group">
            <label htmlFor="route-to">–ö—É–¥–∞:</label>
            <input
              id="route-to"
              type="text"
              value={routeTo}
              onChange={handleToChange}
              placeholder="–ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞"
              className="route-input"
              disabled={isSearching}
              autoComplete="off"
            />
          </div>

          <div className="input-group">
            <label htmlFor="total-time">‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è (–º–∏–Ω—É—Ç—ã):</label>
            <input
              id="total-time"
              type="number"
              value={totalTime}
              onChange={handleTotalTimeChange}
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 30"
              className="route-input"
              disabled={isSearching}
              min="1"
              max="1440"
              autoComplete="off"
            />
            {totalTime && totalTime > 0 && (
              <div className="time-hint">
                üí° –ú–∞—Ä—à—Ä—É—Ç –±—É–¥–µ—Ç —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω –¥–æ ~{calculateRequiredDistance(totalTime).toFixed(1)} –∫–º
                <div style={{ color: '#007bff', fontSize: '12px', marginTop: '4px' }}>
                  üéØ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Å—Ç –º–∞—Ä—à—Ä—É—Ç –Ω—É–∂–Ω–æ–π –¥–ª–∏–Ω—ã –º–µ–∂–¥—É –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ —Ç–æ—á–∫–∞–º–∏
                </div>
                {waypoints.length > 0 && (
                  <div style={{ color: '#ff9800', fontSize: '12px', marginTop: '4px' }}>
                    ‚ö†Ô∏è –ü—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ç–æ—á–∫–∏ –±—É–¥—É—Ç –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω—ã
                  </div>
                )}
              </div>
            )}
          </div>
        </div>

        <button
          type="submit"
          className="route-button"
          disabled={isSearching || !routeFrom.trim() || !routeTo.trim()}
          onClick={(e) => {
            console.log('üî• *** –ö–ù–û–ü–ö–ê –ù–ê–ñ–ê–¢–ê ***')
            console.log('üî• –¢–∏–ø —Å–æ–±—ã—Ç–∏—è:', e.type)
            console.log('üî• routeFrom:', routeFrom)
            console.log('üî• routeTo:', routeTo)
            console.log('üî• waypoints:', waypoints)
          }}
        >
          {isSearching ? '–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞...' : '–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç'}
        </button>

        {/* –¢–ï–°–¢–û–í–ê–Ø –ö–ù–û–ü–ö–ê */}
        <button
          type="button"
          onClick={async () => {
            console.log('üß™ *** –¢–ï–°–¢–û–í–ê–Ø –ö–ù–û–ü–ö–ê –ù–ê–ñ–ê–¢–ê ***')
            console.log('üß™ waypoints:', waypoints)
            console.log('üß™ waypoints.length:', waypoints.length)

            try {
              setRouteFrom('–ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å')
              setRouteTo('–ü–∞—Ä–∫ –ì–æ—Ä—å–∫–æ–≥–æ')
              setIsSearching(true)
              setError('')

              await new Promise(resolve => setTimeout(resolve, 100))

              console.log('üß™ –í—ã–∑—ã–≤–∞–µ–º onRouteSearch...')
              await onRouteSearch('walking')
            } catch (err) {
              console.error('üß™ –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏:', err)
              setError('–û—à–∏–±–∫–∞: ' + err.message)
            } finally {
              setIsSearching(false)
            }
          }}
          className="route-button"
          style={{
            backgroundColor: '#e91e63',
            fontSize: '14px',
            padding: '10px 15px',
            marginTop: '10px'
          }}
          disabled={isSearching}
        >
          üß™ –¢–ï–°–¢: –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
        </button>

        {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
        <button
          type="button"
          onClick={async () => {
            try {
              setError('')
              setRouteFrom('–ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å')
              setRouteTo('–ü–∞—Ä–∫ –ì–æ—Ä—å–∫–æ–≥–æ')
              setIsSearching(true)

              // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
              await new Promise(resolve => setTimeout(resolve, 100))

              await onRouteSearch('walking')
            } catch (err) {
              setError('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞: ' + err.message)
              console.error('Test route error:', err)
            } finally {
              setIsSearching(false)
            }
          }}
          className="route-button"
          style={{
            backgroundColor: '#ff9800',
            fontSize: '12px',
            padding: '8px 12px',
            marginTop: '8px'
          }}
          disabled={isSearching}
        >
          üß™ –¢–µ—Å—Ç: –ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å ‚Üí –ü–∞—Ä–∫ –ì–æ—Ä—å–∫–æ–≥–æ
        </button>

        {error && (
          <div className="error-message">
            {error}
          </div>
        )}
      </form>



      <div className="route-tips">
        <h4>üö∂‚Äç‚ôÇÔ∏è –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–µ—à–µ—Ö–æ–¥–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã:</h4>
        <ul>
          <li>–ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å ‚Üí –ü–∞—Ä–∫ –ì–æ—Ä—å–∫–æ–≥–æ (3.5 –∫–º, ~40 –º–∏–Ω)</li>
          <li>–ê—Ä–±–∞—Ç ‚Üí –¢–≤–µ—Ä—Å–∫–∞—è (1.2 –∫–º, ~15 –º–∏–Ω)</li>
          <li>–ö—Ä–µ–º–ª—å ‚Üí –•—Ä–∞–º –•—Ä–∏—Å—Ç–∞ –°–ø–∞—Å–∏—Ç–µ–ª—è (1.8 –∫–º, ~20 –º–∏–Ω)</li>
          <li>–í–î–ù–• ‚Üí –ë–æ—Ç–∞–Ω–∏—á–µ—Å–∫–∏–π —Å–∞–¥ (2.1 –∫–º, ~25 –º–∏–Ω)</li>
        </ul>
      </div>
    </div>
  )
}

export default RoutePanel
